function t(t,r){(null==r||r>t.length)&&(r=t.length);for(var e=0,n=Array(r);e<r;e++)n[e]=t[e];return n}!function r(e){var n=function(r){if(Array.isArray(r))return t(r)}(c=e.children)||function(t){if("undefined"!=typeof Symbol&&null!=t[Symbol.iterator]||null!=t["@@iterator"])return Array.from(t)}(c)||function(r,e){if(r){if("string"==typeof r)return t(r,void 0);var n=Object.prototype.toString.call(r).slice(8,-1);if("Object"===n&&r.constructor&&(n=r.constructor.name),"Map"===n||"Set"===n)return Array.from(n);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return t(r,void 0)}}(c)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}();if(0!==n.length){if(1===n.length){var o=document.createElement("span"),i=e.childNodes[0].textContent.trim();o.textContent=i,e.prepend(o),e.childNodes[1].remove()}var a=!0,l=!1,u=void 0;try{for(var c,d,f=n[Symbol.iterator]();!(a=(d=f.next()).done);a=!0){var s=d.value;r(s)}}catch(t){l=!0,u=t}finally{try{a||null==f.return||f.return()}finally{if(l)throw u}}}}(document.querySelector(".tree")),document.addEventListener("click",function(t){var r=t.target.closest("span");if(r){var e=r.nextSibling;e.hasAttribute("hidden")?e.removeAttribute("hidden"):e.setAttribute("hidden","true")}});
//# sourceMappingURL=index.4c24810a.js.map
